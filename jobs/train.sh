
#!/bin/bash
train="$1"
dataset="$2"
test_data_file="$3"
extra_agrs="${@:4}"


root_dir=$(echo $(pwd) | awk -F"Domain-Guided-Vulnerability-Detection" '{print $1}')
data_dir="${root_dir}data"
project_dir="${root_dir}/Domain-Guided-Vulnerability-Detection"

train_data_file="${data_dir}/${dataset}/train.jsonl"
eval_data_file="${data_dir}/${dataset}/valid.jsonl"
test_data_file="${data_dir}/${dataset}/${test_data_file}"
# test_data_file="${data_dir}/${dataset}/test_var_swap_1_top5_OppositeClass_with_ast_tokens.jsonl"

seed="123456"
for arg in "$@"
do
    if [[ $arg == --seed=* ]]; then
        seed="${arg#*=}"
    fi
done
saved_model_dir="${project_dir}/saved_models"

case "$train" in
    0)
        extra_agrs+=" --do_test"
        ;;
    1)
        extra_agrs+="  --do_train --do_eval --do_test"
        ;;
    *)
        echo "Invalid Train, Test, Validation code"
        exit 1
        ;;
esac

echo "${extra_agrs}"
echo ${test_data_file}
echo ${data_dir}
echo ${saved_model_dir}
extra_args_slug="$(echo $extra_agrs | sed 's/ //g')"

cd ${project_dir}/code
echo "$(pwd)"
python3 run.py  \
    --train_data_file=${train_data_file} \
    --eval_data_file=${eval_data_file} \
    --test_data_file=${test_data_file} \
    --output_dir ${saved_model_dir} \
    --model_type=roberta \
    --tokenizer_name=microsoft/codebert-base \
    --model_name_or_path=microsoft/codebert-base \
    --epoch 10 \
    --block_size 400 \
    --train_batch_size 8 \
    --gradient_accumulation_steps 4 \
    --eval_batch_size 64 \
    --learning_rate 2e-5 \
    --max_grad_norm 1.0 \
    --evaluate_during_training \
    --seed 123456 \
    ${extra_agrs} > ${project_dir}/logs/$1_$2_$3_${extra_args_slug}.log 2>&1

